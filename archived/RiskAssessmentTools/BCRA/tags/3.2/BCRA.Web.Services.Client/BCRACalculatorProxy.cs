//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="BCRACalculatorSoap", Namespace="http://www.cancer.gov/bcrisktool/")]
public partial class BCRACalculator : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback CalculateBreastCancerRisksOperationCompleted;
    
    /// <remarks/>
    public BCRACalculator() {
        this.Url = "http://localhost:4342/BCRACalculator.asmx";
    }
    
    /// <remarks/>
    public event CalculateBreastCancerRisksCompletedEventHandler CalculateBreastCancerRisksCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.cancer.gov/bcrisktool/CalculateBreastCancerRisks", RequestNamespace="http://www.cancer.gov/bcrisktool/", ResponseNamespace="http://www.cancer.gov/bcrisktool/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public string CalculateBreastCancerRisks(int CurrentAge, int MenarcheAge, int FirstLiveBirthAge, int FirstDegRelatives, int EverHadBiopsy, int NumberOfBiopsy, int HyperPlasia, int Race) {
        object[] results = this.Invoke("CalculateBreastCancerRisks", new object[] {
                    CurrentAge,
                    MenarcheAge,
                    FirstLiveBirthAge,
                    FirstDegRelatives,
                    EverHadBiopsy,
                    NumberOfBiopsy,
                    HyperPlasia,
                    Race});
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCalculateBreastCancerRisks(int CurrentAge, int MenarcheAge, int FirstLiveBirthAge, int FirstDegRelatives, int EverHadBiopsy, int NumberOfBiopsy, int HyperPlasia, int Race, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CalculateBreastCancerRisks", new object[] {
                    CurrentAge,
                    MenarcheAge,
                    FirstLiveBirthAge,
                    FirstDegRelatives,
                    EverHadBiopsy,
                    NumberOfBiopsy,
                    HyperPlasia,
                    Race}, callback, asyncState);
    }
    
    /// <remarks/>
    public string EndCalculateBreastCancerRisks(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((string)(results[0]));
    }
    
    /// <remarks/>
    public void CalculateBreastCancerRisksAsync(int CurrentAge, int MenarcheAge, int FirstLiveBirthAge, int FirstDegRelatives, int EverHadBiopsy, int NumberOfBiopsy, int HyperPlasia, int Race) {
        this.CalculateBreastCancerRisksAsync(CurrentAge, MenarcheAge, FirstLiveBirthAge, FirstDegRelatives, EverHadBiopsy, NumberOfBiopsy, HyperPlasia, Race, null);
    }
    
    /// <remarks/>
    public void CalculateBreastCancerRisksAsync(int CurrentAge, int MenarcheAge, int FirstLiveBirthAge, int FirstDegRelatives, int EverHadBiopsy, int NumberOfBiopsy, int HyperPlasia, int Race, object userState) {
        if ((this.CalculateBreastCancerRisksOperationCompleted == null)) {
            this.CalculateBreastCancerRisksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCalculateBreastCancerRisksOperationCompleted);
        }
        this.InvokeAsync("CalculateBreastCancerRisks", new object[] {
                    CurrentAge,
                    MenarcheAge,
                    FirstLiveBirthAge,
                    FirstDegRelatives,
                    EverHadBiopsy,
                    NumberOfBiopsy,
                    HyperPlasia,
                    Race}, this.CalculateBreastCancerRisksOperationCompleted, userState);
    }
    
    private void OnCalculateBreastCancerRisksOperationCompleted(object arg) {
        if ((this.CalculateBreastCancerRisksCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CalculateBreastCancerRisksCompleted(this, new CalculateBreastCancerRisksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
public delegate void CalculateBreastCancerRisksCompletedEventHandler(object sender, CalculateBreastCancerRisksCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CalculateBreastCancerRisksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CalculateBreastCancerRisksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public string Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[0]));
        }
    }
}
